import React from "react";
import { Image, Text, TouchableOpacity, View, NativeModules, LayoutAnimation } from 'react-native';
import { NetConnectionModal } from './components/NetConnectionModal';
import PushNotification from 'react-native-push-notification';
import { AnimatedView } from './components/AnimatedView';
import { styles } from '../style/styles';
import { cartUrl, cartItemsUrl } from "../data/settings";

const { NativeStorage } = NativeModules;

export default class Product extends React.PureComponent {

	componentDidMount() {
		PushNotification.localNotification({
			id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
			ticker: "My Notification Ticker", // (optional)
			autoCancel: true, // (optional) default: true
			largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
			smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
			bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
			subText: "This is a subText", // (optional) default: none
			color: "red", // (optional) default: system default
			vibrate: true, // (optional) default: true
			vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
			tag: 'some_tag', // (optional) add tag to message
			group: "group", // (optional) add group to message
			ongoing: false, // (optional) set whether this is an "ongoing" notification
			priority: "high", // (optional) set notification priority, default: high
			visibility: "private", // (optional) set notification visibility, default: private
			importance: "high", // (optional) set notification importance, default: high
			title: "My Notification Title", // (optional)
			message: "My Notification Message", // (required)
			playSound: false, // (optional) default: true
			soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
			number: '10', // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
			repeatType: 'day', // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.
			actions: '["Yes", "No"]'  // (Android only) See the doc for notification actions to know more});
		});
	}

	handleOpenProductList = () => {
		this.props.navigation.navigate('ProductsList')
	};

	handleAddToCart = async () => {
		// const PushNotification = require('react-native-push-notification');
		let date = new Date(Date.now() + 5000);

		PushNotification.localNotificationSchedule({
			message: "My Notification Message",
			date,
		});

		const { navigation } = this.props;
		const item = navigation.getParam('item', {});
		const content = await NativeStorage.getItem() || '{}';
		const response = JSON.parse(content);
		const headers = new Headers();

		headers.append('Content-Type', 'application/json');
		headers.append('Authorization', `Bearer ${response.token}`);

		const cartString = await fetch(cartUrl, {
			method: 'GET',
			headers
		});

		if (cartString.status === 200) {
			const addToCartResponse = await fetch(cartItemsUrl, {
				method: 'POST',
				headers,
				body: JSON.stringify({
					cartItem: {
						quote_id: (JSON.parse(cartString._bodyText)).id,
						qty: 1,
						sku: item.sku
					}
				})
			});

			const cartResponse = JSON.parse(addToCartResponse._bodyText);

			console.log(cartResponse);
		}
	};

	logout = () => {
		NativeStorage.clearStorage();
		this.props.navigation.navigate('Auth')
	};

	render () {
		const { navigation } = this.props;
		const item = navigation.getParam('item', {});

		return (
			<View style={styles.containerDescription}>
				<View style={styles.imageTitle}>
					<TouchableOpacity
						onPress={() => this.props.navigation.navigate('ProductMap')}
					>
						<Image style={{ width: 25, height: 25 }} source={require('../pics/map.png')}/>
					</TouchableOpacity>
					<Text style={styles.product}>{item.name}</Text>
				</View>
				<Text style={styles.description}>{item.description}</Text>
				<View style={styles.itemContainer}>
					<TouchableOpacity
						onPress={this.handleOpenProductList}
						style={styles.button}>
						<Text style={styles.label}>Products</Text>
					</TouchableOpacity>
					<TouchableOpacity
						onPress={this.handleAddToCart}
						style={styles.button}>
						<Text style={styles.label}>Add to Cart</Text>
					</TouchableOpacity>
					<TouchableOpacity
						onPress={this.logout}
						style={styles.button}>
						<Text style={styles.label}>Logout</Text>
					</TouchableOpacity>
				</View>
				<NetConnectionModal/>
			</View>
		);
	}
}
